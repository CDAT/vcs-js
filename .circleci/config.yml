version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      ls workspace/cdat
      # following will install miniconda3 under $WORKDIR/miniconda/bin
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
#  - &create_conda_env
#    name: create_conda_env
#    command: |
#       export PATH=$WORKDIR/miniconda/bin:$PATH
#       conda config --set always_yes yes --set changeps1 no
#       conda update -y -q conda
#       conda config --set anaconda_upload no
#       conda create -n py2 -c cdat/label/nightly -c conda-forge -c cdat vcs mesalib testsrunner "python<3"
#       #conda create -n py3 -c cdat/label/nightly -c conda-forge -c cdat vcs mesalib testsrunner "python>3"


#  - &setup_vcsjs
#    name: setup_vcsjs
#    command: |
#       export PATH=$WORKDIR/miniconda/bin:$PATH
#       export UVCDAT_ANONYMOUS_LOG=False
#       set +e
#       #source activate py3
#       source activate py2
#       set -e
#       rm -rf build

#  - &run_vcsjs_tests
#    name: run_vcsjs_tests
#    command: |
#       export PATH=$WORKDIR/miniconda/bin:$PATH
#       export UVCDAT_ANONYMOUS_LOG=False
#       set +e
#       source activate py2
#       set -e
#       #python run_tests.py -H -v2 
#       export PYTHONPATH=.
#       vtkpython scripts/vcs-test-server.py &
#       npm run karma:travis:wait
#       RESULT=$?
#       #echo "**** py2 test result: "${RESULT}
#       #set +e
#       #source activate py3
#       #set -e
#       #python run_tests.py -H -v2 
#       #PY3_RESULT=$?
#       #echo "**** py3 test result: "${PY3_RESULT}
#       #RESULT=$(( $RESULT + $PY3_RESULT))
#       exit $RESULT
#
  - &conda_upload
    name: conda_upload
    command: |
       if [[ $CIRCLE_BRANCH == 'master' ]]; then
          exit 0
       fi
       export PATH=${HOME}/project/$WORKDIR/miniconda/bin:$PATH
       conda install conda-build anaconda-client
       conda config --set anaconda_upload no
       export CONDA_BLD_PATH=`pwd`/conda_build
       git clone git://github.com/cdat/conda-recipes
       cd conda-recipes
       export PKG_NAME=vcs-js
       export USER=cdat
       export VERSION=8.0
       export LABEL=nightly
       if [[ -d $PKG_NAME ]]; then
          rm -rf $PKG_NAME
       fi
       ln -s ../recipe $PKG_NAME
       python ./prep_for_build.py -l $VERSION
       conda build $PKG_NAME -c cdat/label/nightly -c conda-forge -c cdat --python=2.7
       #conda build $PKG_NAME -c cdat/label/nightly -c conda-forge -c cdat --python=3.6
       anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $CONDA_BLD_PATH/$OS/$PKG_NAME-*$VERSION.`date +%Y*`0.tar.bz2 --force

jobs:
    #  macos_vcsjs:
    #macos:
    #  xcode: "9.2.0"
    #environment:
    #  WORKDIR: "workspace/test_macos_vcsjs"
    #  OS: "osx-64"
    #steps:
    #  - checkout
    #      - run: *setup_miniconda
#      - run: *create_conda_env
#      - run: *setup_vcsjs
#      - run: *run_vcsjs_tests
#  - run: *conda_upload
#      - store_artifacts:
#          path: tests_html
#          destination: tests_html
#
  linux_vcsjs:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_vcsjs"
      OS: "linux-64"
    steps:
      - checkout
      - run: *setup_miniconda 
#      - run: *create_conda_env
#      - run: *setup_vcsjs
#      - run: *run_vcsjs_tests
      - run: *conda_upload
#      - store_artifacts:
#          path: tests_html
#          destination: tests_html


workflows:
  version: 2
  vcsjs:
    jobs:
      - linux_vcsjs


       
